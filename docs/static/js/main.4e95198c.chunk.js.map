{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cat","type","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OAEI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BC,QAAQC,IAAI,kBACZD,QAAQC,IAAIR,GACZF,GAAc,SAACW,GAAD,OAAUT,GAAV,mBAAyBS,OACvCR,EAAc,MASlB,SACI,uBACIS,KAAK,OACLC,MAAOX,EACPY,SAAU,SAACT,GAAD,OAvBI,SAACA,GACvBF,EAAcE,EAAEU,OAAOF,OAsBEG,CAAkBX,S,+BC3BtCY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,gDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1CX,QAAQC,IAAIgB,GAbO,kBAeZA,GAfY,4CAAH,sDCFPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OADAX,QAAQC,IAAIoB,EAAOV,GAEf,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAY,IAAD,EACVjB,mBAAS,CAC/BwB,KAAK,GACLa,SAAQ,IAHwB,mBAC7BC,EAD6B,KACtBC,EADsB,KAkBpC,OAXAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAAI,OAAEH,EACR,CACIf,KAAKkB,EACLL,SAAS,SAGlB,CAACpB,IAGGqB,EDdwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QASpB,OARA7B,QAAQC,IAAI4B,GASR,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAEP,OADAnB,QAAQC,IAAIkB,GAGR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aES1BgB,EAjCM,WAAM,MAGa5C,mBAAS,CAAC,cAHvB,mBAGhB6C,EAHgB,KAGJ9C,EAHI,KAWvB,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ8C,EAAWnB,KAAI,SAACT,EAAU6B,GACtB,OAAO,cAAC,EAAD,CAEH7B,SAAUA,GADLA,Y,MClBjC8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.4e95198c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    //<button onClick={handleAdd}>Agregar</button>\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            console.log('Submit hecho!!');\r\n            console.log(inputValue);\r\n            setCategories((cat) => [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e) => handleInputChange(e)}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=6kFf2ganNheEaBIhCAjGB0kXaoXuDcfv`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n    console.log(gifs);\r\n\r\n    return gifs;\r\n    //setImages(gifs)\r\n\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    console.log(title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt= {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    console.log(loading);\r\n\r\n \r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading ...</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => {\r\n                        console.log(img);\r\n                        return (\r\n\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs=>setState(\r\n            {\r\n                data:imgs,\r\n                loading: false\r\n\r\n            }));\r\n    }, [category]);\r\n\r\n    \r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './componentes/AddCategory';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samuray X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     const category = 'hunterxhunter';\r\n    //     setCategories([...categories, category]);\r\n\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={setCategories} />\r\n            <ol>\r\n                {\r\n                    categories.map((category, index) => {\r\n                        return <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}